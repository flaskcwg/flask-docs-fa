# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# Komeil Parseh <ahmdparsh129@gmail.com>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-19 14:23+0430\n"
"PO-Revision-Date: 2022-05-24 17:22+0430\n"
"Last-Translator: Komeil Parseh <ahmdparsh129@gmail.com>\n"
"Language-Team: fa <ahmdparsh129@gmail.com>\n"
"Language: fa\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../extensiondev.rst:2
msgid "Flask Extension Development"
msgstr "توسعه افزونه فلاسک"

#: ../../extensiondev.rst:4
msgid ""
"Flask, being a microframework, often requires some repetitive steps to get a third "
"party library working. Many such extensions are already available on `PyPI`_."
msgstr ""
"فلاسک که یک میکروفریمورک است، اغلب به چند مرحله تکراری نیاز دارد تا یک کتابخانه شخص "
"ثالث کار کند. بسیاری از چنین افزونه ها در حال حاضر در  `PyPI`_ در دسترس هستند."

#: ../../extensiondev.rst:8
msgid ""
"If you want to create your own Flask extension for something that does not exist "
"yet, this guide to extension development will help you get your extension running "
"in no time and to feel like users would expect your extension to behave."
msgstr ""
"اگر می خواهید افزونه فلاسک خود را برای چیزی که هنوز وجود ندارد ایجاد کنید، این "
"راهنمای توسعه افزونه به شما کمک می کند تا افزونه خود را در کوتاه ترین زمان اجرا "
"کنید و احساس کنید که کاربران انتظار دارند افزونه شما رفتار کند."

#: ../../extensiondev.rst:14
msgid "Anatomy of an Extension"
msgstr "آناتومی یک افزونه"

#: ../../extensiondev.rst:16
msgid ""
"Extensions are all located in a package called ``flask_something`` where "
"\"something\" is the name of the library you want to bridge.  So for example if you "
"plan to add support for a library named `simplexml` to Flask, you would name your "
"extension's package ``flask_simplexml``."
msgstr ""
"افزونه ها همه در بسته‌ای به نام ``flask_something`` قرار دارند که در آن «something» "
"نام کتابخانه‌ای است که می‌خواهید پل بزنید. بنابراین، برای مثال، اگر قصد دارید برای "
"کتابخانه‌ای به نام `simplexml` به فلاسک پشتیبانی اضافه کنید، نام بسته افزونه خود را "
"``flask_simplexml`` بگذارید."

#: ../../extensiondev.rst:21
msgid ""
"The name of the actual extension (the human readable name) however would be "
"something like \"Flask-SimpleXML\".  Make sure to include the name \"Flask\" "
"somewhere in that name and that you check the capitalization. This is how users can "
"then register dependencies to your extension in their :file:`setup.py` files."
msgstr ""
"با این حال، نام افزونه واقعی (نام قابل خواندن برای انسان) چیزی شبیه «Flask-"
"SimpleXML» خواهد بود. مطمئن شوید که نام «Flask» را در جایی در آن نام وارد کرده اید "
"و حروف بزرگ را بررسی کنید. بدین ترتیب کاربران می توانند وابستگی هایی را به افزونه "
"شما در فایل های :file:`setup.py` خود ثبت کنند."

#: ../../extensiondev.rst:27
msgid ""
"But what do extensions look like themselves?  An extension has to ensure that it "
"works with multiple Flask application instances at once.  This is a requirement "
"because many people will use patterns like the :doc:`/patterns/appfactories` "
"pattern to create their application as needed to aid unittests and to support "
"multiple configurations. Because of that it is crucial that your application "
"supports that kind of behavior."
msgstr ""
"اما افزونه ها خودش چه شکلی هستند؟ یک افزونه باید اطمینان حاصل کند که با چندین نمونه "
"برنامه فلاسک به طور همزمان کار می کند. این یک الزام است زیرا بسیاری از افراد از "
"الگوهایی مانند الگوی :doc:`/patterns/appfactories` برای ایجاد برنامه کاربردی خود در "
"صورت نیاز برای کمک به تست های واحد و پشتیبانی از چندین پیکربندی استفاده می کنند. به "
"همین دلیل بسیار مهم است که برنامه شما از این نوع رفتار پشتیبانی کند."

#: ../../extensiondev.rst:35
msgid ""
"Most importantly the extension must be shipped with a :file:`setup.py` file and "
"registered on PyPI.  Also the development checkout link should work so that people "
"can easily install the development version into their virtualenv without having to "
"download the library by hand."
msgstr ""
"مهمتر از همه، افزونه ها باید با فایل :file:`setup.py` ارسال شود و در PyPI ثبت شود. "
"همچنین لینک توسعه دهندگان باید کار کند تا افراد بتوانند به راحتی نسخه توسعه را در "
"virtualenv خود نصب کنند و نیازی به دانلود دستی کتابخانه نباشند."

#: ../../extensiondev.rst:40
msgid ""
"Flask extensions must be licensed under a BSD, MIT or more liberal license in order "
"to be listed in the Flask Extension Registry.  Keep in mind that the Flask "
"Extension Registry is a moderated place and libraries will be reviewed upfront if "
"they behave as required."
msgstr ""
"افزونه های فلاسک باید تحت مجوز BSD، MIT یا مجوز آزادتر باشند تا در رجیستری افزونه "
"فلاسک فهرست شوند. به خاطر داشته باشید که رجیستری افزونه فلاسک یک مکان مدیریت شده "
"است و کتابخانه ها از قبل بررسی می شوند تا مطابق با نیاز رفتار کنند."

#: ../../extensiondev.rst:46
msgid "\"Hello Flaskext!\""
msgstr "\"Hello Flaskext!\""

#: ../../extensiondev.rst:48
msgid ""
"So let's get started with creating such a Flask extension.  The extension we want "
"to create here will provide very basic support for SQLite3."
msgstr ""
"بنابراین بیایید با ایجاد افزونه فلاسک شروع کنیم. افزونه‌ای که می‌خواهیم در اینجا "
"ایجاد کنیم، از SQLite3 پشتیبانی می‌کند."

#: ../../extensiondev.rst:51
msgid "First we create the following folder structure::"
msgstr "ابتدا ساختار پوشه زیر را ایجاد می کنیم::"

#: ../../extensiondev.rst:58
msgid "Here's the contents of the most important files:"
msgstr "در اینجا محتویات مهم ترین فایل ها آمده است:"

#: ../../extensiondev.rst:61
msgid "setup.py"
msgstr "فایل setup.py"

#: ../../extensiondev.rst:63
msgid ""
"The next file that is absolutely required is the :file:`setup.py` file which is "
"used to install your Flask extension.  The following contents are something you can "
"work with::"
msgstr ""
"فایل بعدی که کاملا مورد نیاز است فایل :file:`setup.py` است که برای نصب افزونه فلاسک "
"شما استفاده می شود. مطالب زیر چیزی است که می توانید با آن کار کنید::"

#: ../../extensiondev.rst:106
msgid ""
"That's a lot of code but you can really just copy/paste that from existing "
"extensions and adapt."
msgstr ""
"این کد زیادی است، اما می‌توانید آن را از افزونه های موجود کپی/پیست کنید و تطبیق دهید."

#: ../../extensiondev.rst:110
msgid "flask_sqlite3.py"
msgstr "فایل flask_sqlite3.py"

#: ../../extensiondev.rst:112
msgid ""
"Now this is where your extension code goes.  But how exactly should such an "
"extension look like?  What are the best practices?  Continue reading for some "
"insight."
msgstr ""
"اکنون این جایی است که کد افزونه شما می رود. اما دقیقاً چنین افزونه ای چگونه باید "
"باشد؟ بهترین شیوه ها چیست؟ برای آگاهی بیشتر به خواندن ادامه دهید."

#: ../../extensiondev.rst:117
msgid "Initializing Extensions"
msgstr "راه اندازی برنامه های افزودنی"

#: ../../extensiondev.rst:119
msgid ""
"Many extensions will need some kind of initialization step.  For example, consider "
"an application that's currently connecting to SQLite like the documentation "
"suggests (:doc:`/patterns/sqlite3`). So how does the extension know the name of the "
"application object?"
msgstr ""
"بسیاری از افزونه ها به نوعی مرحله اولیه سازی نیاز دارند. برای مثال، برنامه‌ای را در "
"نظر بگیرید که در حال حاضر به SQLite متصل است( :doc:`/patterns/sqlite3` ). پس چگونه "
"افزونه ها نام شی برنامه را می داند؟"

#: ../../extensiondev.rst:124
msgid "Quite simple: you pass it to it."
msgstr "خیلی ساده: شما آن را به آن منتقل می کنید."

#: ../../extensiondev.rst:126
msgid "There are two recommended ways for an extension to initialize:"
msgstr "دو روش پیشنهادی برای مقداردهی اولیه یک افزونه وجود دارد:"

#: ../../extensiondev.rst:128
msgid "initialization functions:"
msgstr "توابع اولیه سازی:"

#: ../../extensiondev.rst:130
msgid ""
"If your extension is called `helloworld` you might have a function called "
"``init_helloworld(app[, extra_args])`` that initializes the extension for that "
"application.  It could attach before / after handlers etc."
msgstr ""
"اگر افزونه شم `helloworld` نام دارد، ممکن است تابعی به نام ``init_helloworld(app[, "
"extra_args])`` داشته باشید که افزونه را برای آن برنامه مقداردهی اولیه می کند. می "
"تواند قبل یا بعد از کنترل کننده ها و غیره متصل شود."

#: ../../extensiondev.rst:135
msgid "classes:"
msgstr "کلاس ها:"

#: ../../extensiondev.rst:137
msgid ""
"Classes work mostly like initialization functions but can later be used to further "
"change the behavior."
msgstr ""
"کلاس ها بیشتر مانند توابع اولیه سازی کار می کنند، اما بعداً می توانند برای تغییر "
"بیشتر رفتار استفاده شوند."

#: ../../extensiondev.rst:140
msgid ""
"What to use depends on what you have in mind.  For the SQLite 3 extension we will "
"use the class-based approach because it will provide users with an object that "
"handles opening and closing database connections."
msgstr ""
"اینکه چه چیزی استفاده شود بستگی به آنچه در ذهن دارید دارد. برای افزونه SQLite3 ما "
"از رویکرد مبتنی بر کلاس استفاده خواهیم کرد زیرا شیئی را در اختیار کاربران قرار می "
"دهد که اتصالات پایگاه داده را باز و بسته می کند."

#: ../../extensiondev.rst:144
msgid ""
"When designing your classes, it's important to make them easily reusable at the "
"module level. This means the object itself must not under any circumstances store "
"any application specific state and must be shareable between different applications."
msgstr ""
"هنگام طراحی کلاس های خود، مهم است که آنها را به راحتی در سطح ماژول قابل استفاده "
"مجدد کنید. این بدان معنی است که خود شیء تحت هیچ شرایطی نباید هیچ حالت خاصی از "
"برنامه را ذخیره کند و باید بین برنامه های مختلف قابل اشتراک گذاری باشد."

#: ../../extensiondev.rst:150
msgid "The Extension Code"
msgstr "کد افزونه"

#: ../../extensiondev.rst:152
msgid "Here's the contents of the `flask_sqlite3.py` for copy/paste::"
msgstr "در اینجا محتویات `flask_sqlite3.py` برای کپی/پیست کردن آمده است::"

#: ../../extensiondev.rst:185
msgid "So here's what these lines of code do:"
msgstr "بنابراین آنچه را که این خطوط کد انجام می دهند به شرح زیر است:"

#: ../../extensiondev.rst:187
msgid ""
"The ``__init__`` method takes an optional app object and, if supplied, will call "
"``init_app``."
msgstr ""
"روش ``__init__`` یک شی برنامه اختیاری می گیرد و در صورت ارائه، ``init_app`` را "
"فراخوانی می کند."

#: ../../extensiondev.rst:189
msgid ""
"The ``init_app`` method exists so that the ``SQLite3`` object can be instantiated "
"without requiring an app object.  This method supports the factory pattern for "
"creating applications.  The ``init_app`` will set the configuration for the "
"database, defaulting to an in memory database if no configuration is supplied.  In "
"addition, the ``init_app`` method attaches the ``teardown`` handler."
msgstr ""
"متد  ``init_app`` وجود دارد تا شی ``SQLite3`` بدون نیاز به یک شی برنامه نمونه‌سازی "
"شود. این روش از الگوی کارخانه برای ایجاد برنامه ها پشتیبانی می کند. ``init_app`` "
"پیکربندی پایگاه داده را تنظیم می کند و در صورت عدم ارائه پیکربندی به صورت پیش فرض "
"روی پایگاه داده در حافظه قرار می گیرد. علاوه بر این، روش ``init_app`` ، کنترل‌کننده "
"``teardown`` را متصل می‌کند."

#: ../../extensiondev.rst:195
msgid "Next, we define a ``connect`` method that opens a database connection."
msgstr ""
"در مرحله بعد، یک متد  ``connect``  تعریف می کنیم که اتصال پایگاه داده را باز می کند."

#: ../../extensiondev.rst:196
msgid ""
"Finally, we add a ``connection`` property that on first access opens the database "
"connection and stores it on the context.  This is also the recommended way to "
"handling resources: fetch resources lazily the first time they are used."
msgstr ""
"در نهایت، یک ویژگی ``connection`` اضافه می کنیم که در اولین دسترسی، اتصال پایگاه "
"داده را باز می کند و آن را در زمینه ذخیره می کند. این نیز روشی است که برای مدیریت "
"منابع توصیه می‌شود: اولین باری که منابع را استفاده می‌کنید، آنها را با تنبلی واکشی "
"کنید."

#: ../../extensiondev.rst:201
msgid ""
"Note here that we're attaching our database connection to the top application "
"context via ``_app_ctx_stack.top``. Extensions should use the top context for "
"storing their own information with a sufficiently complex name."
msgstr ""
"در اینجا توجه داشته باشید که ما اتصال پایگاه داده خود را از طریق ``_app_ctx_stack."
"top`` به زمینه برنامه برتر متصل می کنیم. برنامه های افزودنی باید از زمینه بالا برای "
"ذخیره اطلاعات خود با نامی به اندازه کافی پیچیده استفاده کنند."

#: ../../extensiondev.rst:206
msgid ""
"So why did we decide on a class-based approach here?  Because using our extension "
"looks something like this::"
msgstr ""
"پس چرا در اینجا روی یک رویکرد کلاس محور تصمیم گرفتیم؟ زیرا استفاده از افزونه ما "
"چیزی شبیه به این است::"

#: ../../extensiondev.rst:216
msgid "You can then use the database from views like this::"
msgstr "سپس می توانید از پایگاه داده از نماهایی مانند زیر استفاده کنید:"

#: ../../extensiondev.rst:223
msgid ""
"Likewise if you are outside of a request you can use the database by pushing an app "
"context::"
msgstr ""
"به همین ترتیب، اگر خارج از یک درخواست هستید، می توانید با فشار دادن یک متن برنامه "
"از پایگاه داده استفاده کنید::"

#: ../../extensiondev.rst:230
msgid ""
"At the end of the ``with`` block the teardown handles will be executed "
"automatically."
msgstr ""
"در پایان بلوک ``with``، دسته های پارگی(teardown handles) به طور خودکار اجرا می‌شوند."

#: ../../extensiondev.rst:233
msgid ""
"Additionally, the ``init_app`` method is used to support the factory pattern for "
"creating apps::"
msgstr ""
"علاوه بر این، از روش ``init_app`` برای پشتیبانی از الگوی کارخانه برای ایجاد برنامه "
"ها استفاده می شود::"

#: ../../extensiondev.rst:241
msgid ""
"Keep in mind that supporting this factory pattern for creating apps is required for "
"approved flask extensions (described below)."
msgstr ""
"به خاطر داشته باشید که پشتیبانی از این الگوی کارخانه برای ایجاد برنامه‌ها برای "
"برنامه‌های افزودنی فلاسک تأیید شده (توضیح داده شده در زیر) لازم است."

#: ../../extensiondev.rst:244
msgid "Note on ``init_app``"
msgstr "یادداشتی در مورد ``init_app``"

#: ../../extensiondev.rst:246
msgid ""
"As you noticed, ``init_app`` does not assign ``app`` to ``self``.  This is "
"intentional!  Class based Flask extensions must only store the application on the "
"object when the application was passed to the constructor.  This tells the "
"extension: I am not interested in using multiple applications."
msgstr ""
"همانطور که متوجه شدید، ``init_app`` ، ``app`` را به ``self`` اختصاص نمی دهد. این "
"عمدی است! افزونه های فلاسک مبتنی بر کلاس فقط زمانی باید برنامه را روی شی ذخیره کنند "
"که برنامه به سازنده ارسال شود. این به افزونه می گوید: من علاقه ای به استفاده از "
"چندین برنامه کاربردی ندارم."

#: ../../extensiondev.rst:252
msgid ""
"When the extension needs to find the current application and it does not have a "
"reference to it, it must either use the :data:`~flask.current_app` context local or "
"change the API in a way that you can pass the application explicitly."
msgstr ""
"هنگامی که افزونه نیاز به یافتن برنامه فعلی دارد و مرجعی به آن ندارد، باید یا از متن "
"محلی :data:`~flask.current_app` استفاده کند یا API را به گونه ای تغییر دهد که "
"بتوانید برنامه را به صراحت منتقل کنید."

#: ../../extensiondev.rst:259
msgid "Using _app_ctx_stack"
msgstr "استفاده از _app_ctx_stack"

#: ../../extensiondev.rst:261
msgid ""
"In the example above, before every request, a ``sqlite3_db`` variable is assigned "
"to ``_app_ctx_stack.top``.  In a view function, this variable is accessible using "
"the ``connection`` property of ``SQLite3``.  During the teardown of a request, the "
"``sqlite3_db`` connection is closed.  By using this pattern, the *same* connection "
"to the sqlite3 database is accessible to anything that needs it for the duration of "
"the request."
msgstr ""
"در مثال بالا، قبل از هر درخواست، یک متغیر ``sqlite3_db`` به ``_app_ctx_stack.top`` "
"اختصاص داده می شود. در یک تابع view، این متغیر با استفاده از ویژگی ``connection`` "
"در ``SQLite3`` قابل دسترسی است. در حین از بین رفتن یک درخواست، اتصال ``sqlite3_db`` "
"بسته می شود. با استفاده از این الگو، اتصال *همان* به پایگاه داده sqlite3 برای هر "
"چیزی که در طول مدت درخواست به آن نیاز دارد، قابل دسترسی است."

#: ../../extensiondev.rst:270
msgid "Learn from Others"
msgstr "از دیگران یاد بگیرید"

#: ../../extensiondev.rst:272
msgid ""
"This documentation only touches the bare minimum for extension development. If you "
"want to learn more, it's a very good idea to check out existing extensions on "
"`PyPI`_.  If you feel lost there is `Discord Chat`_ or `GitHub Discussions`_ to get "
"some ideas for nice looking APIs.  Especially if you do something nobody before you "
"did, it might be a very good idea to get some more input.  This not only generates "
"useful feedback on what people might want from an extension, but also avoids having "
"multiple developers working in isolation on pretty much the same problem."
msgstr ""
"این مستندات فقط حداقل ها را برای توسعه برنامه های افزودنی لمس می کند. اگر می‌خواهید "
"بیشتر بیاموزید، ایده بسیار خوبی است که برنامه‌های افزودنی موجود در `PyPI`_ را بررسی "
"کنید. اگر احساس می‌کنید گم شده‌اید، `Discord Chat`_ یا `GitHub Discussions`_ وجود "
"دارد تا ایده‌هایی برای APIهای زیبا به دست آورید. به خصوص اگر کاری را که قبل از انجام "
"هیچ کس انجام نداده اید، انجام می دهید، ممکن است ایده بسیار خوبی باشد که اطلاعات "
"بیشتری دریافت کنید. این نه تنها بازخورد مفیدی در مورد آنچه مردم ممکن است از یک "
"برنامه افزودنی بخواهند ایجاد می کند، بلکه از داشتن چندین توسعه دهنده به صورت مجزا "
"روی تقریباً یک مشکل جلوگیری می کند."

#: ../../extensiondev.rst:281
msgid ""
"Remember: good API design is hard, so introduce your project on `Discord Chat`_ or "
"`GitHub Discussions`_, and let other developers give you a helping hand with "
"designing the API."
msgstr ""
"به یاد داشته باشید: طراحی API خوب سخت است، بنابراین پروژه خود را در `Discord Chat`_ "
"یا `GitHub Discussions`_» معرفی کنید، و اجازه دهید سایر توسعه دهندگان در طراحی API "
"به شما کمک کنند."

#: ../../extensiondev.rst:285
msgid ""
"The best Flask extensions are extensions that share common idioms for the API.  And "
"this can only work if collaboration happens early."
msgstr ""
"بهترین افزونه های فلاسک، افزونه هایی هستند که اصطلاحات مشترکی برای API دارند. و این "
"تنها در صورتی می تواند کارساز باشد که همکاری زودتر اتفاق بیفتد."

#: ../../extensiondev.rst:289
msgid "Approved Extensions"
msgstr "افزونه های تایید شده"

#: ../../extensiondev.rst:291
msgid ""
"Flask previously had the concept of approved extensions. These came with some "
"vetting of support and compatibility. While this list became too difficult to "
"maintain over time, the guidelines are still relevant to all extensions maintained "
"and developed today, as they help the Flask ecosystem remain consistent and "
"compatible."
msgstr ""
"فلاسک قبلاً مفهوم افزونه های تأیید شده را داشت. اینها با بررسی پشتیبانی و سازگاری "
"همراه بودند. در حالی که حفظ این فهرست در طول زمان بسیار دشوار شد، دستورالعمل‌ها "
"همچنان به همه برنامه‌های افزودنی که امروزه حفظ و توسعه می‌شوند مرتبط هستند، زیرا به "
"اکوسیستم فلاسک کمک می‌کنند سازگار و سازگار باقی بماند."

#: ../../extensiondev.rst:297
msgid ""
"An approved Flask extension requires a maintainer. In the event an extension author "
"would like to move beyond the project, the project should find a new maintainer and "
"transfer access to the repository, documentation, PyPI, and any other services. If "
"no maintainer is available, give access to the Pallets core team."
msgstr ""
"یک افزونه به نگهدارنده نیاز دارد. در صورتی که نویسنده افزونه بخواهد فراتر از پروژه "
"حرکت کند، پروژه باید یک نگهدارنده جدید پیدا کند و دسترسی به مخزن، اسناد، PyPI و هر "
"سرویس دیگری را منتقل کند. اگر هیچ نگهدارنده ای در دسترس نباشید، باید تیم اصلی "
"Pallets دسترسی پیدا کند."

#: ../../extensiondev.rst:302
msgid ""
"The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*. It must "
"provide exactly one package or module named ``flask_extension_name``."
msgstr ""
"طرح نامگذاری *Flask-نام‌افزونه* یا *نام‌افزونه-Flask* است. باید دقیقاً یک بسته یا "
"ماژول به نام ``نام_افزونه_flask`` ارائه دهد."

#: ../../extensiondev.rst:305
msgid ""
"The extension must be BSD or MIT licensed. It must be open source and publicly "
"available."
msgstr "افزونه باید دارای مجوز BSD یا MIT و همچنین منبع باز و در دسترس عموم باشد."

#: ../../extensiondev.rst:307
msgid "The extension's API must have the following characteristics:"
msgstr "API افزونه باید دارای ویژگی های زیر باشد:"

#: ../../extensiondev.rst:309
msgid ""
"It must support multiple applications running in the same Python process. Use "
"``current_app`` instead of ``self.app``, store configuration and state per "
"application instance."
msgstr ""
"باید از چندین برنامه در حال اجرا در یک فرآیند پایتون پشتیبانی کند. به جای ``self."
"app`` از ``current_app`` استفاده کنید، پیکربندی و وضعیت را در هر نمونه برنامه ذخیره "
"کنید."

#: ../../extensiondev.rst:312
msgid ""
"It must be possible to use the factory pattern for creating applications. Use the "
"``ext.init_app()`` pattern."
msgstr ""
"باید امکان استفاده از الگوی کارخانه برای ایجاد برنامه ها وجود داشته باشد. از الگوی "
"``ext.init_app()`` استفاده کنید."

#: ../../extensiondev.rst:315
msgid ""
"From a clone of the repository, an extension with its dependencies must be "
"installable with ``pip install -e .``."
msgstr ""
"از یک کلون مخزن، یک افزونه با وابستگی های آن باید با ``pip install -e .`` قابل نصب "
"باشد."

#: ../../extensiondev.rst:317
msgid ""
"It must ship a testing suite that can be invoked with ``tox -e py`` or ``pytest``. "
"If not using ``tox``, the test dependencies should be specified in a ``requirements."
"txt`` file. The tests must be part of the sdist distribution."
msgstr ""
"باید یک مجموعه آزمایشی ارسال کنید که بتوان آن را با ``tox -e py`` یا ``pytest`` "
"فراخوانی کرد. اگر از ``tox`` استفاده نمی کنید، وابستگی های تست را در فایل "
"``requirements.txt`` مشخص کنید. آزمون ها نیز باید بخشی از توزیع sdist باشند."

#: ../../extensiondev.rst:321
msgid ""
"The documentation must use the ``flask`` theme from the `Official Pallets Themes`_. "
"A link to the documentation or project website must be in the PyPI metadata or the "
"readme."
msgstr ""
"اسناد باید از موضوع ``flask`` از  `Official Pallets Themes`_ استفاده کنند. پیوند به "
"اسناد یا وب سایت پروژه نیز باید در  PyPI یا فایل README باشد."

#: ../../extensiondev.rst:324
msgid ""
"For maximum compatibility, the extension should support the same versions of Python "
"that Flask supports. 3.7+ is recommended as of December 2021. Use "
"``python_requires=\">= 3.7\"`` in ``setup.py`` to indicate supported versions."
msgstr ""
"برای حداکثر سازگاری، افزونه باید از همان نسخه‌های پایتون پشتیبانی کند که فلاسک "
"پشتیبانی می‌کند.از سال ۲۰۲۰، نسخه ۳.۶ و بالاتر پایتون توصیه می شود. از "
"``python_requires=\">= 3.6\"`` در ``setup.py`` برای نشان دادن نسخه های پشتیبانی شده "
"استفاده کنید."
