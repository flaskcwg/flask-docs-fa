# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# Abol-010 <abole@gilmail.ir>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-05 18:50+0330\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Abol-010 <abole@gilmail.ir>\n"
"Language-Team: fa <ahmdparsh129@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../server.rst:4
msgid "Development Server"
msgstr "سرور توسعه"

#: ../../server.rst:6
msgid ""
"Flask provides a ``run`` command to run the application with a "
"development server. In debug mode, this server provides an interactive "
"debugger and will reload when code is changed."
msgstr ""
"فلسک برای راه اندازی اپلیکیشن یک دستور ``run`` فراهم کرده "
"با یک محیط توسعه. در حالت خطایاب, این سرور یک "
"خطایاب تعاملی و بارگزاری مجدد تغییرات اعمال شده در کد را فراهم میکند. "

#: ../../server.rst:12
msgid ""
"Do not use the development server when deploying to production. It is "
"intended for use only during local development. It is not designed to be "
"particularly efficient, stable, or secure."
msgstr ""
"از محیط توسعه در زمان پیاده کردن اپلیکیشن استفاده نکنید. "
"زیرا فقط برای استفاده در حین توسعه محلی در نظر گرفته شده. "
"و همچنین برای کارآمدی, پایداری و امن بودن طراحی نشده. "

#: ../../server.rst:16
msgid "See :doc:`/deploying/index` for deployment options."
msgstr ""
"برای دیدن امکانات پیاده سازی :doc:`/deploying/index` را ببینید. "

#: ../../server.rst:19
msgid "Command Line"
msgstr "خط دستور"

#: ../../server.rst:21
msgid ""
"The ``flask run`` CLI command is the recommended way to run the "
"development server. Use the ``--app`` option to point to your "
"application, and the ``--debug`` option to enable debug mode."
msgstr ""
"راه پیشنهادی برای راه اندازی محیط توسعه دستور ``flask run`` میباشد. "
"از سوییچ ``app--`` برای اشاره به برنامه خود  "
"و همچنین از ``debug--`` برای فعال کردن حالت خطایاب استفاده کنید. "


#: ../../server.rst:29
msgid ""
"This enables debug mode, including the interactive debugger and reloader,"
" and then starts the server on http://localhost:5000/. Use ``flask run "
"--help`` to see the available options, and :doc:`/cli` for detailed "
"instructions about configuring and using the CLI."
msgstr ""
"این دستور حالت خطایاب را فعال میکند, از جمله خطایاب تعاملی و بارگذار کننده مجدد, "
" و سپس سرور را بر http://localhost:5000 راه اندازی میکند. "
"برای دیدن امکانات قابل استفاده از ``flask run --help `` و "
"همچنین از :doc:`/cli` برای جزئیات دستورالعمل های مربوط به پیکربندی و استفاده از خط دستور استفاده کنید. "

#: ../../server.rst:38
msgid "Address already in use"
msgstr "آدرس در حال استفاده"

#: ../../server.rst:40
msgid ""
"If another program is already using port 5000, you'll see an ``OSError`` "
"when the server tries to start. It may have one of the following "
"messages:"
msgstr ""
"اگر برنامه دیگری در حال استفاده از پورت 5000 است, یک ``OSError`` را خواهید دید "
"زمانی که سرور در حال تلاش برای راه اندازی است. "
"احتمالا یکی از پیام های زیر را دریافت خواهید کرد: "

#: ../../server.rst:44
msgid "``OSError: [Errno 98] Address already in use``"
msgstr ""

#: ../../server.rst:45
msgid ""
"``OSError: [WinError 10013] An attempt was made to access a socket in a "
"way forbidden by its access permissions``"
msgstr ""

#: ../../server.rst:48
msgid ""
"Either identify and stop the other program, or use ``flask run --port "
"5001`` to pick a different port."
msgstr ""
"یا برنامه دیگر را شناسایی و متوقف کنید, یا از ``flask run --port "
""5001`` برای استفاده از یک پورت دیگر استفاده کنید. "

#: ../../server.rst:51
msgid ""
"You can use ``netstat`` or ``lsof`` to identify what process id is using "
"a port, then use other operating system tools stop that process. The "
"following example shows that process id 6847 is using port 5000."
msgstr ""
"میتوانید از ``netstat`` یا ``lsof`` برای شناسایی شماره پروسه ای که درحال "
"استفاده از یک پورت است استفاده کنید, و یا از دیگر ابزار های سیستم عامل برای متوقف سازی آن پروسه. "
"مثال روبه رو شماره پروسه 6847 را در حال استفاده از پورت 5000 نشان میدهد.  "

#: ../../server.rst:57
msgid "``netstat`` (Linux)"
msgstr ""

#: ../../server.rst:64
msgid "``lsof`` (macOS / Linux)"
msgstr ""

#: ../../server.rst:71
msgid "``netstat`` (Windows)"
msgstr ""

#: ../../server.rst:78
msgid ""
"macOS Monterey and later automatically starts a service that uses port "
"5000. You can choose to disable this service instead of using a different"
" port by searching for \"AirPlay Receiver\" in System Preferences and "
"toggling it off."
msgstr ""
"مک اواس monterey و دیگر نسخه ها به صورت خودکار سرویسی را راه اندازی میکنند که از پورت "
"5000 استفاده میکند. میتوانید به جای استفاده از پورت دیگری با "
" جستجو برای \"AirPlay Receiver\" در System Preferences و خاموش کردن آن "
"آن سرویس دیگر را خاموش کنید. "

#: ../../server.rst:84
msgid "Deferred Errors on Reload"
msgstr "خطاهای به تعویق افتاده در بارگزاری مجدد"

#: ../../server.rst:86
msgid ""
"When using the ``flask run`` command with the reloader, the server will "
"continue to run even if you introduce syntax errors or other "
"initialization errors into the code. Accessing the site will show the "
"interactive debugger for the error, rather than crashing the server."
msgstr ""
"زمانی که از دستور ``flask run`` با بارگزار کننده مجدد استفاده میکنید, سرور "
"راه اندازی برنامه را ادامه خواهد داد حتی اگر شما خطاهای سینتکس "
"و یا دیگر خطاهای اولیه در کد را مرتکب شوید. دسترسی به سایت خطایاب تعاملی را "
"برای خطاها نمایش خواهد داد, به جای خراب شدن سرور. "

#: ../../server.rst:91
msgid ""
"If a syntax error is already present when calling ``flask run``, it will "
"fail immediately and show the traceback rather than waiting until the "
"site is accessed. This is intended to make errors more visible initially "
"while still allowing the server to handle errors on reload."
msgstr ""
"اگر خطای سینتکس قبل از فراخوانی ``flask run`` رخ دهد, فورا "
"از کار خواهد افتاد و رد خطا را به جای منتظر ماندن نمایش خواهد داد تا "
"زمانی که سایت قابل دسترسی باشد. این در ابتدا جهت بیشتر نمایان کردن خطاهاست "
"و در عین حال به سرور اجازه میدهد تا خطاها را هنگام بارگذاری مجدد مدیریت کند. "

#: ../../server.rst:98
msgid "In Code"
msgstr "در کد"

#: ../../server.rst:100
msgid ""
"The development server can also be started from Python with the "
":meth:`Flask.run` method. This method takes arguments similar to the CLI "
"options to control the server. The main difference from the CLI command "
"is that the server will crash if there are errors when reloading. "
"``debug=True`` can be passed to enable debug mode."
msgstr ""
"همچنین سرور توسعه میتواند از پایتون راه اندازی شود با متود :meth:`Flask.run`. "
"این متود ورودی های مشابه امکانات خط دستوری را برای کنترل کردن سرور دریافت میکند. "
"تفاوت اصلی آن با دستور خط دستوری این است که درصورتی که خطایی هنگام بارگزاری مجدد "
"وجود داشته باشد سرور خراب خواهد شد.  "
"``debug=True`` را میتوان برای فعال سازی حالت خطایابی ارسال کرد. "

#: ../../server.rst:105
msgid ""
"Place the call in a main block, otherwise it will interfere when trying "
"to import and run the application with a production server later."
msgstr ""
"فراخوانی را در یک بخش اصلی بگذارید, در غیر این صورت هنگام تلاش  "
"برای وارد کردن و اجرای برنامه با سرور تداخل ایجاد خواهد کرد "

#~ msgid ""
#~ "You can use ``netstat`` to identify "
#~ "what process id is using a port,"
#~ " then use other operating system "
#~ "tools stop that process. The following"
#~ " example shows that process id 6847"
#~ " is using port 5000."
#~ msgstr ""

#~ msgid "Linux/Mac"
#~ msgstr ""

#~ msgid "Windows"
#~ msgstr ""

#~ msgid ""
#~ "MacOS Monterey and later automatically "
#~ "starts a service that uses port "
#~ "5000. To disable the service, got "
#~ "to System Preferences, Sharing, and "
#~ "disable \"AirPlay Receiver\"."
#~ msgstr ""

#~ msgid ""
#~ "The ``flask run`` command line script"
#~ " is the recommended way to run "
#~ "the development server. It requires "
#~ "setting the ``FLASK_APP`` environment variable"
#~ " to point to your application, and"
#~ " ``FLASK_ENV=development`` to fully enable "
#~ "development mode."
#~ msgstr ""

#~ msgid ""
#~ "Prior to Flask 1.0 the ``FLASK_ENV`` "
#~ "environment variable was not supported "
#~ "and you needed to enable debug "
#~ "mode by exporting ``FLASK_DEBUG=1``. This "
#~ "can still be used to control debug"
#~ " mode, but you should prefer setting"
#~ " the development environment as shown "
#~ "above."
#~ msgstr ""

#~ msgid ""
#~ "Flask provides a ``run`` command to "
#~ "run the application with a development"
#~ " server. In development mode, this "
#~ "server provides an interactive debugger "
#~ "and will reload when code is "
#~ "changed."
#~ msgstr ""

#~ msgid ""
#~ "The ``flask run`` command line script"
#~ " is the recommended way to run "
#~ "the development server. Use the "
#~ "``--app`` option to point to your "
#~ "application, and the ``--env development`` "
#~ "option to fully enable development mode."
#~ msgstr ""

#~ msgid ""
#~ "These options (and any others) can "
#~ "also be set using environment variables."
#~ msgstr ""

#~ msgid "Bash"
#~ msgstr ""

#~ msgid "Fish"
#~ msgstr ""

#~ msgid "CMD"
#~ msgstr ""

#~ msgid "Powershell"
#~ msgstr ""

#~ msgid ""
#~ "This enables the development environment, "
#~ "including the interactive debugger and "
#~ "reloader, and then starts the server "
#~ "on http://localhost:5000/. Use ``flask run "
#~ "--help`` to see the available options,"
#~ " and  :doc:`/cli` for detailed instructions"
#~ " about configuring and using the CLI."
#~ msgstr ""

#~ msgid ""
#~ "Debug mode can be controlled separately"
#~ " from the development environment with "
#~ "the ``--debug/--no-debug`` option or the"
#~ " ``FLASK_DEBUG`` environment variable. This "
#~ "is how older versions of Flask "
#~ "worked. You should prefer setting the"
#~ " development environment as shown above."
#~ msgstr ""

#~ msgid "Lazy or Eager Loading"
#~ msgstr ""

#~ msgid ""
#~ "When using the ``flask run`` command "
#~ "with the reloader, the server will "
#~ "continue to run even if you "
#~ "introduce syntax errors or other "
#~ "initialization errors into the code. "
#~ "Accessing the site will show the "
#~ "interactive debugger for the error, "
#~ "rather than crashing the server. This"
#~ " feature is called \"lazy loading\"."
#~ msgstr ""

#~ msgid ""
#~ "To override this behavior and always "
#~ "fail immediately, even on reload, pass"
#~ " the ``--eager-loading`` option. To "
#~ "always keep the server running, even "
#~ "on the initial call, pass ``--lazy-"
#~ "loading``."
#~ msgstr ""

#~ msgid ""
#~ "As an alternative to the ``flask "
#~ "run`` command, the development server "
#~ "can also be started from Python "
#~ "with the :meth:`Flask.run` method. This "
#~ "method takes arguments similar to the"
#~ " CLI options to control the server."
#~ " The main difference from the CLI "
#~ "command is that the server will "
#~ "crash if there are errors when "
#~ "reloading."
#~ msgstr ""

#~ msgid ""
#~ "``debug=True`` can be passed to enable"
#~ " the debugger and reloader, but the"
#~ " ``FLASK_ENV=development`` environment variable "
#~ "is still required to fully enable "
#~ "development mode."
#~ msgstr ""

#~ msgid ""
#~ "macOS Monterey and later automatically "
#~ "starts a service that uses port "
#~ "5000. To disable the service, go "
#~ "to System Preferences, Sharing, and "
#~ "disable \"AirPlay Receiver\"."
#~ msgstr ""
